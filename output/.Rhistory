setwd("F:/Plovers/3rd Chapter/Exploratory_results/output")
csvfiles <- list.files(path = ".", pattern='*\\.csv$', all.files=TRUE)
csvfiles
import.list <- lapply(csvfiles, read.csv, header = TRUE, as.is=TRUE, na.strings=c("NA"," ",""))
working.list <- import.list[c(4,5)]#bs_data_per_indiv.csv
names(working.list) <- c("season","indiv")
attach(working.list)
#detach(working.list)
#--------------------------------------------------------------
#0. Prepare Data:-----------
library(plyr)
str(indiv, list.len=300)
cols<-c(122,124)
indiv[,cols]<-apply(indiv[,cols], 2, function(x) as.Date(x, "%Y-%m-%d"))
indiv$pop.year <- paste(indiv$population, indiv$year, sep="-")
indiv<-ddply(indiv, c("pop.year"), transform, bs.start.std= scale(bs.start))
indiv<-ddply(indiv, c("pop.year"), transform, bs.end.std=scale(bs.end))
indiv<-ddply(indiv, c("pop.year"), transform, bs.length.std=scale(bs.length))
# indiv$pop.sp.sex<-ifelse(indiv$population %in% "Tuzla",
#                                paste(indiv$population, indiv$species, indiv$field_sex_focal, sep="-"),
#                                paste(indiv$population, indiv$species, indiv$mol_sex_focal, sep="-"))
indiv$sex<-ifelse(indiv$population %in% "Tuzla", indiv$field_sex_focal, indiv$mol_sex_focal)
ind<-which(is.na(indiv$sex))
indiv[ind,]
indiv$sex.available<-ifelse(indiv$mol_sex_focal %in% "M"| indiv$mol_sex_focal %in% "F", indiv$mol_sex_focal, indiv$field_sex_focal)
#indiv$pop.sp.field_sex<-paste(indiv$population, indiv$species, indiv$field_sex_focal, sep="-")
indiv$pop.sp.year<-paste(indiv$pop.sp, indiv$year, sep="-")
#Add breeding season length to each year
unique(indiv$pop.sp.year)
indiv$season.length <- season$breedingseasonlength[match(indiv$pop.sp.year, season$pop.sp.year)]
#If an individual stayed longer than the breeding season length, then change its length to the breeding season lenght
indiv[indiv$bs.length > indiv$season.length,]
indiv$corrected.bs.length <- ifelse(indiv$bs.length > indiv$season.length, indiv$season.length, indiv$bs.length)
indiv<-ddply(indiv, c("pop.year"), transform, corrected.bs.length.std=scale(corrected.bs.length))
ind<-which(is.na(indiv$corrected.bs.length.std))
indiv[ind,]
#Monogamous and polygamous pops
indiv$ms <- ifelse(indiv$pop.sp %in% c("Ceuta-SP", "Tuzla-KP", "Madagascar-KiP"), "Pol", "Mon")
males.mol<-indiv[indiv$sex %in% "M",]
females.mol<-indiv[indiv$sex %in% "F",]
both.mol<-rbind(males.mol, females.mol)
males.av<-indiv[indiv$sex.available %in% "M",]
females.av<-indiv[indiv$sex.available %in% "F",]
both.av<-rbind(males.av,females.av)
both.mol$sex <- as.factor(both.mol$sex)
both.av$sex.available<-as.factor(both.av$sex.available)
#restrict to individuals ringed one year before focal year:
names(both)
length(both.mol$year) #4215
length(both.av$year) #4464
#USE available sex FIRST 04/05/2016
both1<-both.av[both.av$year > both.av$year.cr,]
length(which(!is.na(both1$year))) #1445 but there were NAs insterted....so total 1357
unique(both1$pop.year)
table(both1$pop.year)
indiv$asr[indiv$pop.sp %in% "Ceuta-SP"]<- 0.608
indiv$asr[indiv$pop.sp %in% "Tuzla-KP"]<-0.585
indiv$asr[indiv$pop.sp %in% "Madagascar-MP"]<-0.421
indiv$asr[indiv$pop.sp %in% "Maio-KP"]<-0.469
indiv$asr[indiv$pop.sp %in% "Madagascar-WfP"]<-0.429
indiv$asr[indiv$pop.sp %in% "Madagascar-KiP"]<-0.386
indiv$asr
indiv$pop.sp
males.mol<-indiv[indiv$sex %in% "M",]
females.mol<-indiv[indiv$sex %in% "F",]
both.mol<-rbind(males.mol, females.mol)
males.av<-indiv[indiv$sex.available %in% "M",]
females.av<-indiv[indiv$sex.available %in% "F",]
both.av<-rbind(males.av,females.av)
both.mol$sex <- as.factor(both.mol$sex)
both.av$sex.available<-as.factor(both.av$sex.available)
#restrict to individuals ringed one year before focal year:
names(both)
length(both.mol$year) #4215
length(both.av$year) #4464
#USE available sex FIRST 04/05/2016
both1<-both.av[both.av$year > both.av$year.cr,]
length(which(!is.na(both1$year))) #1445 but there were NAs insterted....so total 1357
unique(both1$pop.year)
table(both1$pop.year)
both<-both1
summary(both$corrected.bs.length.std)
ind<-which(is.na(both$corrected.bs.length.std))
both[ind,] #no NAs ,/
summary(both$bs.start.std)
both$corrected.bs.length.std.plus3<-both$corrected.bs.length.std + 3
both$bs.start.std.plus7 <- both$bs.start.std + 4
summary(both$bs.start.std.plus7)
hist(both$corrected.bs.length.std)
table(both$bs.length.std)
qqnorm(both$corrected.bs.length.std)
qqline(both$corrected.bs.length.std,lty=2)
qqp(both$corrected.bs.length.std, "norm")
require(MASS)
library(car)
qqp(both$corrected.bs.length.std, "norm")
shapiro.test(both$corrected.bs.length.std)
ks.test(both$corrected.bs.length.std, pnorm)
boxplot(bs.length.std~interaction(sex.available, ms),data=both,
ylab="Std length of breeding schedule")
plot(bs.length.std~asr, data=both)
lines(smooth.spline(bs.lenght, asr), col="red")
lines(smooth.spline(bs.length, asr), col="red")
lines(smooth.spline(both$bs.length.std, both$asr), col="red")
lines(lm(both$bs.length.std~both$asr), col="red")
lm(both$bs.length.std~both$asr)
loess_fit<-loess(bs.lenght.std~asr, data=both)
loess_fit<-loess(bs.length.std~asr, data=both)
lines(both$asr, predict(loess_fit) col="red")
lines(both$asr, predict(loess_fit), col="red")
both$asr
lines(both$asr[which(!is.na(both$asr))], predict(loess_fit), col="red")
boxplot(bs.length.std~asr, data=both)
boxplot(bs.length.std~interaction(sex.available,asr), data=both)
plot(bs.length.std~asr|sex.available, data=both)
plot(bs.length.std~asr, data=both)
help(interaction.plot)
interaction.plot(asr, sex.available, bs.length.std, data=both)
interaction.plot(both$asr, both$sex.available, both$bs.length.std)
boxplot(bs.length.std~interaction(sex.available,asr), data=both)
interaction.plot(both$asr, both$sex.available, both$bs.length.std)
interaction.plot(both$asr, both$sex.available, both$bs.length.std, type="b")
interaction.plot(both$asr, both$ms, both$bs.length.std, type="b")
interaction.plot(both$asr, both$sex.available, both$bs.length.std, type="b")
interaction.plot(both$asr, paste(both$ms, both$sex.available), both$bs.length.std, type="b")
both[is.na(both$corrected.bs.length.std.plus3),]
both<-both1[which(!is.na(both1$year)),]
interaction.plot(both$asr, paste(both$ms, both$sex.available), both$bs.length.std, type="b")
boxplot(bs.length.std~interaction(sex.available,asr), data=both)
boxplot(bs.length.std~interaction(sex.available,asr), data=both)
plot(bs.length.std~asr, data=both)
interaction.plot(both$asr, paste(both$ms, both$sex.available), both$bs.length.std, type="p")
interaction.plot(both$asr, paste(both$ms, both$sex.available), both$bs.length.std, type="b")
mm1<-lme(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex.available+  ms + ms:sex.available + asr + asr:sex.available + asr:ms + year, random = ~1|id, method="ML", na.action=na.omit, data=both) #residual plot does not look good, needs change of error structure
library(lme4)
mm1<-lme(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex.available+  ms + ms:sex.available + asr + asr:sex.available + asr:ms + year, random = ~1|id, method="ML", na.action=na.omit, data=both) #residual plot does not look good, needs change of error structure
library(nlme)
mm1<-lme(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex.available+  ms + ms:sex.available + asr + asr:sex.available + asr:ms + year, random = ~1|id, method="ML", na.action=na.omit, data=both) #residual plot does not look good, needs change of error structure
both$id <- ifelse(is.na(both$ring), both$code, both$ring)
both$id <- as.factor(both$id)
both$year <- as.factor(both$year)
both$species<-as.factor(both$species)
both$ms <- as.factor(both$ms)
both$population<-as.factor(both$population)
both$sex.available<-as.factor(both$sex.available)
mm1<-lme(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex.available+  ms + ms:sex.available + asr + asr:sex.available + asr:ms + year, random = ~1|id, method="ML", na.action=na.omit, data=both) #residual plot does not look good, needs change of error structure
mm.reml<-update(mm1, method="REML")
mm2<-update(mm.reml, random=~1|species/id)
anova(mm.reml,mm2)
mm4<-update(mm.reml, random=~1|population/id) #simpler version of random effects is better ~1|species/id
anova(mm.reml,mm4)
mm6<-update(mm.reml, random=~1|population/species/id)
anova(mm.reml,mm6)
mm5<-update(mm.reml, random=~1|pop.sp/id) #blend pop & sp in one factor
anova(mm5,mm.reml)
AIC(mm.reml,mm2,mm4,mm6,mm5)
mm.r<-lme(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex.available +ms + ms:sex.available+ asr + asr:sex.available + asr:ms + year, random = ~1|id, method="ML", na.action=na.omit, data=both)
summary(mm.r)
m<-mm.r
par(mfrow=c(1,1))
sresid<-residuals(m)
plot(fitted(m), sresid, xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0, lty = 2)
lines(smooth.spline(fitted(m), residuals(m)), col="red") #Model-checking plots show that the residuals are well behaved if the red line is horizontal
rownames(both)<- 1:length(both$X)
text(fitted(m),residuals(m),labels=rownames(both)) #rows 1586, 3434 and 3157 are the problematic ones
text(fitted(m),residuals(m),labels=both$id)
plot(m, id~resid(.), abline=0) #errors should be centered at 0 - constant variance across groups
plot(m, species~resid(.), abline=0)
plot(m, population~resid(.), abline=0)
plot(m, residuals.lme(., type="normalized") ~ fitted(.) | species, id=0.05, adj=-0.3)
plot(m, residuals.lme(., type="normalized") ~ fitted(.) | population, id=0.05, adj=-0.3)
qqnorm(m, ~resid(.)|population) #and the errors are reasonably close to normally distributed in all species
qqnorm(m, ~resid(.)|species)
plot(m, corrected.bs.length.std~fitted(.)) #The response variable is a reasonably linear function of the fitted values
plot(sresid~both$bs.start.std)
plot(sresid~both$total.nests.peryear)
plot(sresid~both$ms)
plot(sresid~both$sex.available)
plot(sresid~both$year)
m<-mm.r
summary(m)
mm5<-update(m, .~. -ms:sex.available, .)
anova(m,mm5) #use threshold of p<0.001 (Thomas, Vaughan & Lello, page 98)
mm6<-update(mm5, .~. -ms:asr,.)
anova(mm5,mm6)
summary(mm6)
mm7<-update(mm5, .~. -sex.available:asr, .)
anova(mm5,mm7)
summary(mm7)
mm7<-update(mm6, .~. -sex.available:asr, .)
anova(mm6,mm7)
mm8 <- update(mm7, .~. -year,.)
anova(mm7,mm8)
summary(mm8)
mm9<- update(mm8, .~. - asr)
anova(mm8,mm9)
mm10<-update(mm6, .~. - sex.available,.)
mm10<-update(mm9, .~. - sex.available,.)
anova(mm9,mm10)
summary(mm9)
mm11<-update(mm9,.~. -ms,.)
anova(mm9,mm11)
mm12<-update(mm9,.~.-total.nests.peryear,.)
anova(mm9,mm12)
mm14<-update(mm9,.~.-bs.start.std,.)
anova(mm9,mm14)
summary(mm9)
mfinal<-update(mm9, .~.+ms:asr+asr,.)
summary(mfinal)
vif.mer <- function (fit) {
## adapted from rms::vif
v <- vcov(fit)
nam <- names(fixef(fit))
## exclude intercepts
ns <- sum(1 * (nam == "Intercept" | nam == "(Intercept)"))
if (ns > 0) {
v <- v[-(1:ns), -(1:ns), drop = FALSE]
nam <- nam[-(1:ns)]
}
d <- diag(v)^0.5
v <- diag(solve(v/(d %o% d)))
names(v) <- nam
v
}
vif.mer(mfinal)
mm.r<-lme(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex.available +ms + ms:sex.available+ log(asr) + loag(asr):sex.available + asr:ms + year, random = ~1|id, method="ML", na.action=na.omit, data=both)
mm.r<-lme(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex.available +ms + ms:sex.available+ log(asr) + log(asr):sex.available + asr:ms + year, random = ~1|id, method="ML", na.action=na.omit, data=both)
summary(mm.r)
mm.r<-lme(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex.available + asr + asr:sex.available + year, random = ~1|id, method="ML", na.action=na.omit, data=both)
summary(mm.r)
m<-mm.r
summary(m)
z. <- function (x) scale(x)
mm.r<-lme(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex.available + ms:sex.available +z.(asr) + z.(asr):sex.available + z.(asr):ms + year, random = ~1|id, method="ML", na.action=na.omit, data=both)
summary(mm.r)
summary(mm.r)
vif.mer(mm.r)
mm.r<-lme(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex.available + ms:sex.available +z.(asr)+ms + z.(asr):sex.available + z.(asr):ms + year, random = ~1|id, method="ML", na.action=na.omit, data=both)
summary(mm.r)
vif.mer(mm.r)
1-.95
qnorm(0.975)
qnorm(0.05)
1-0.5
0.05/2
qnorm(0.025)
qnorm(0.025, lower.tail=F)
mm1<-lme(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex.available+  asr:bs.start.std+ asr + asr:sex.available + asr:ms + year, random = ~1|id, method="ML", na.action=na.omit, data=both) #residual plot does not look good, needs change of error structure
summary(mm1)
mm1<-lme(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex.available+  asr:bs.start.std+ asr + asr:sex.available +asr:totaln.ests.peryear + year, random = ~1|id, method="ML", na.action=na.omit, data=both) #residual plot does not look good, needs change of error structure
mm1<-lme(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex.available+  asr:bs.start.std+ asr + asr:sex.available +asr:total.nests.peryear + year, random = ~1|id, method="ML", na.action=na.omit, data=both) #residual plot does not look good, needs change of error structure
summary(mm1)
plot(both$corrected.bs.length.std)
plot(both$corrected.bs.length.std)
rownames(both)<- 1:length(both$X)
text(both$corrected.bs.length.std,labels=rownames(both))
both[c(236,304),]
leverage<-function(x){1/length(x)+(x-mean(x))^2/sum((x-mean(x))^2)}
leverage(both$corrected.bs.length.std)
a<-leverage(both$corrected.bs.length.std)
summary(a)
plot(leverage(both$corrected.bs.length.std),type="h")
abline(0.0299,0,lty=2)
points(leverage(both$corrected.bs.length.std))
help(text)
text(both$corrected.bs.length.std[a>0.0017],labels=rownames(both))
both$corrected.bs.length.std[a>0.0017]
a>0.0017
text(both$corrected.bs.length.std[a>0.0017],labels=rownames(both))
text(both$corrected.bs.length.std[a>0.0017],labels=rownames(both[a>0.0017]))
text(both$corrected.bs.length.std[a>0.0017],labels=rownames(both[a>0.0017,]))
text(both$corrected.bs.length.std[a>0.0017],labels=rownames(both[a>0.0017,]),
cex = 0.5)
gamma <- fitdistr(both$corrected.bs.length.std.plus3, "gamma")
qqp(both$corrected.bs.length.std.plus3, "gamma", shape = gamma$estimate[[1]], rate = gamma$estimate[[2]])
both$corrected.bs.length.std.plus3
both$corrected.bs.length.std.plus3<-both$corrected.bs.length.std + 3
gamma <- fitdistr(both$corrected.bs.length.std.plus3, "gamma")
qqp(both$corrected.bs.length.std.plus3, "gamma", shape = gamma$estimate[[1]], rate = gamma$estimate[[2]])
poisson <- fitdistr(both$corrected.bs.length.std.plus3, "Poisson")
qqp(both$corrected.bs.length.std.plus3, "pois", poisson$estimate)
qqp(both$corrected.bs.length.std.plus3, "lnorm") #needs newer version of R
qqp(both$corrected.bs.length.std, "norm")
text(both$corrected.bs.length.std,labels=rownames(both),
cex = 0.5)
plot(both$corrected.bs.length.std)
text(both$corrected.bs.length.std,labels=rownames(both)) #236 and 304
plot(both$corrected.bs.length.std)
rownames(both)<- 1:length(both$X)
text(both$corrected.bs.length.std,labels=rownames(both), cex=0.5) #236 and 304
plot(both$corrected.bs.length.std, type="n")
rownames(both)<- 1:length(both$X)
text(both$corrected.bs.length.std,labels=rownames(both), cex=0.5) #236 and 304
plot(both$corrected.bs.length.std, type="n")
rownames(both)<- 1:length(both$X)
text(both$corrected.bs.length.std,labels=rownames(both)) #236 and 304
both[c(236,304,882),]
both.no.outliers<-both[-c(236,304,882),]
qqp(both.no.outliers$corrected.bs.length.std, "norm")
a<-leverage(both$corrected.bs.length.std)
plot(leverage(both.no.outliers$corrected.bs.length.std),type="h")
abline(0.0299,0,lty=2)
points(leverage(both.no.outliers$corrected.bs.length.std))
text(leverage(both.no.outliers$corrected.bs.length.std[a>0.0017]),labels=rownames(both[a>0.0017,]),
cex = 0.5)
text(leverage(both.no.outliers$corrected.bs.length.std[a>0.008]),labels=rownames(both[a>0.008,]),
cex = 0.5)
plot(both.no.outliers$corrected.bs.length.std)
