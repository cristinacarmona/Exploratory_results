install.packages("arm")
library("arm", lib.loc="~/R/win-library/3.1")
library(arm)
standardize
showMethods("standardize")
methods(standardize)
standardize
standardGeneric("standardize")
methods(standardize)
site:https://svn.r-project.org/R/trunk/src standardize
google:https://svn.r-project.org/R/trunk/src standardize
getAnywhere(standardize)
class(standardize)
methods(standardize)
help(lm)
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
group <- gl(2, 10, 20, labels = c("Ctl","Trt"))
weight <- c(ctl, trt)
lm.D9 <- lm(weight ~ group)
lm.D90 <- lm(weight ~ group - 1) # omitting intercept
summary(lm.D9)
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
weight <- c(10,20,30,40,50,60,70,80,90,100,10,20,30,40,50,60,70,80,90,100)
lm.D9 <- lm(weight ~ ctl + trt)
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
weight <- c(10,20,30,40,50,60,70,80,90,100)
lm.D9 <- lm(weight ~ ctl + trt)
summary(lm.D9)
help(standardize)
M1.2 <- standardize(lm.D9)
display(M1.2)
mean.ctl <- mean(ctl)
mean.ctl
sd(ctl)
sd2.ctl <- 2*sd(ctl)
sd2.ctl
mean.trt <- mean(trt)
sd2.trt <- 2*sd(trt)
std.ctl <- lapply((ctl-mean(ctl))/sd2.ctl)
std.ctl <- lapply(ctl, fun(x) (x-mean.ctl)/sd2.ctl)
help(lapply)
std.ctl <- lapply(ctl, fun(x) x-mean.ctl/sd2.ctl)
std.ctl <- ctl-mean.ctl/sd2.ctl
std.ctl
std.ctl <- (ctl-mean.ctl)/sd2.ctl
std.ctl
std.trt <- (trt-mean.trt)/sd2.trt
lm.D9.std <- lm(weight ~ std.ctl + std.trt)
summary(lm.D9.std)
M1.2 <- standardize(lm.D9)
display(M1.2)
help(mean)
help(sd)
tmp <- tapply( iris$Petal.Length, iris$Species, function(x) hist(x, plot=FALSE) )
plot.new()
tmp.r <- do.call( range, lapply(tmp, `[[`, 'breaks') )
plot.window(xlim=c(1/2,length(tmp)+1/2), ylim=tmp.r)
abline(v=seq_along(tmp))
for( i in seq_along(tmp) ) {
h <- tmp[[i]]
rf <- h$counts/sum(h$counts)
rect( i-rf/2, head(h$breaks, -1), i+rf/2, tail(h$breaks, -1) )
}
axis(1, at=seq_along(tmp), labels=names(tmp))
axis(2)
box()
tmp
iris$Petal.Length
iris$Species
roundrectGrob(x=0.5, y=0.5, width=1, height=1,
default.units="npc",
r=unit(0.1, "snpc"),
just="centre",
name=NULL, gp=NULL, vp=NULL)
h <- tmp[[1]]
h
h <- tmp[[2]]
h
help(rect)
h <- tmp[[1]]
h
rf <- h$counts/sum(h$counts)
rf
h$breaks
head(h$breaks, -1)
help(head)
1-rf/2
1+rf/2
box()
plot.window(xlim=c(1/2,length(tmp)+1/2), ylim=tmp.r)
tmp.r <- do.call( range, lapply(tmp, `[[`, 'breaks') )
plot.window(xlim=c(1/2,length(tmp)+1/2), ylim=tmp.r)
plot.new()
tmp.r <- do.call( range, lapply(tmp, `[[`, 'breaks') )
plot.window(xlim=c(1/2,length(tmp)+1/2), ylim=tmp.r)
abline(v=seq_along(tmp))
for( i in seq_along(tmp) ) {
h <- tmp[[i]]
rf <- h$counts/sum(h$counts)
rect( i-rf/2, head(h$breaks, -1), i+rf/2, tail(h$breaks, -1) )
}
axis(1, at=seq_along(tmp), labels=names(tmp))
axis(2)
box()
help(chisq.test)
insects<-cbind(observed, expected)
observed<-c(30,114)
expected<-c(72,72)
insects<-cbind(observed, expected)
chisq.test(insects)
24+160
184/310
24*150
3600/310
24+(160/310)
24*(160/310)
24*(150/310)
48*(160/310)
48*(150/310)
expected <- c(24.77, 23.23)
observed <- c(21, 17)
expected <- c(24.77, 23.23)
insects.hal<-cbind(observed, expected)
chisq.test(insects.hal)
38*(160/310)
38*(150/310)
observed <- c(21, 17)
expected <- c(19.61, 18.38)
insects.hal<-cbind(observed, expected)
chisq.test(insects.hal)
no.insects.exposed<-c(0.25, 0, 0.017647059, 0.13125)
no.insects.covered<-c(0.95, 0.013333333, 0.04, 0.113333333)
flower.diameter<-c(6.278571429, 1.5444444, 3.388888889, 3.782222222)
ins.diam<-cbind(no.insects.exposed, no.insects.covered, flower.diameter)
ins.diam
ins.diam<-as.data.frame(ins.diam)
plot(ins.diam$no.insects.exposed~ins.diam$flower.diameter)
line(lm(ins.diam$no.insects.exposed~ins.diam$flower.diameter))
abline(lm(ins.diam$no.insects.exposed~ins.diam$flower.diameter))
help(plot)
plot(ins.diam$no.insects.covered~ins.diam$flower.diameter, type="p")
points(ins.diam$no.insects.covered)#, type="p")
points(ins.diam$no.insects.covered, col="dark red" )#, type="p")
plot(ins.diam$no.insects.exposed~ins.diam$flower.diameter)
abline(lm(ins.diam$no.insects.exposed~ins.diam$flower.diameter))
points(ins.diam$no.insects.covered, col="dark red" )#, type="p")
abline(lm(ins.diam$no.insects.covered~ins.diam$flower.diameter, col="red"))
plot(ins.diam$no.insects.exposed~ins.diam$flower.diameter)
abline(lm(ins.diam$no.insects.exposed~ins.diam$flower.diameter))
points(ins.diam$no.insects.covered, col="red" )
abline(lm(ins.diam$no.insects.covered~ins.diam$flower.diameter, col="red"))
help(abline)
abline(lm(ins.diam$no.insects.covered~ins.diam$flower.diameter, col="blue"))
line(lm(ins.diam$no.insects.covered~ins.diam$flower.diameter, col="blue"))
plot(ins.diam$no.insects.exposed~ins.diam$flower.diameter)
abline(lm(ins.diam$no.insects.exposed~ins.diam$flower.diameter))
points(ins.diam$no.insects.covered, col="red" )
line(lm(ins.diam$no.insects.covered~ins.diam$flower.diameter, col="blue"))
plot(ins.diam$no.insects.exposed~ins.diam$flower.diameter)
abline(lm(ins.diam$no.insects.exposed~ins.diam$flower.diameter))
points(ins.diam$no.insects.covered, col="red" )
line(lm(ins.diam$no.insects.covered~ins.diam$flower.diameter, col="blue"))
line(lm(ins.diam$no.insects.covered~ins.diam$flower.diameter), col="blue")
line(lm(ins.diam$no.insects.covered~ins.diam$flower.diameter))#, col="blue")
lm(ins.diam$no.insects.covered~ins.diam$flower.diameter)
line(lm(ins.diam$no.insects.covered~ins.diam$flower.diameter))#, col="blue")
plot(ins.diam$no.insects.exposed~ins.diam$flower.diameter)
abline(lm(ins.diam$no.insects.exposed~ins.diam$flower.diameter))
points(ins.diam$no.insects.covered, col="red" )
line(lm(ins.diam$no.insects.covered~ins.diam$flower.diameter))
observed<-c(30,114)
expected<-c(72,72)
insects.gum<-cbind(observed, expected)
chisq.test(insects.gum)
observed <- c(10, 28)
expected <- c(19, 19)
insects.hal<-cbind(observed, expected)
chisq.test(insects.hal)
setwd("F:/Plovers/3rd Chapter/Exploratory_results/output")
csvfiles <- list.files(path = ".", pattern='*\\.csv$', all.files=TRUE)
csvfiles
import.list <- lapply(csvfiles, read.csv, header = TRUE, as.is=TRUE, na.strings=c("NA"," ",""))
working.list <- import.list[c(4,5)]#bs_data_per_indiv.csv
names(working.list) <- c("season","indiv")
attach(working.list)
#detach(working.list)
#--------------------------------------------------------------
#0. Prepare Data:-----------
library(plyr)
str(indiv, list.len=300)
cols<-c(122,124)
indiv[,cols]<-apply(indiv[,cols], 2, function(x) as.Date(x, "%Y-%m-%d"))
indiv$pop.year <- paste(indiv$population, indiv$year, sep="-")
indiv<-ddply(indiv, c("pop.year"), transform, bs.start.std= scale(bs.start))
indiv<-ddply(indiv, c("pop.year"), transform, bs.end.std=scale(bs.end))
indiv<-ddply(indiv, c("pop.year"), transform, bs.length.std=scale(bs.length))
indiv$pop.sp.sex<-ifelse(indiv$population %in% "Tuzla",
paste(indiv$population, indiv$species, indiv$field_sex_focal, sep="-"),
paste(indiv$population, indiv$species, indiv$mol_sex_focal, sep="-"))
indiv$sex<-ifelse(indiv$population %in% "Tuzla", indiv$field_sex_focal, indiv$mol_sex_focal)
indiv$pop.sp.field_sex<-paste(indiv$population, indiv$species, indiv$field_sex_focal, sep="-")
indiv$pop.sp.year<-paste(indiv$pop.sp, indiv$year, sep="-")
#Add breeding season length to each year
unique(indiv$pop.sp.year)
indiv$season.length <- season$breedingseasonlength[match(indiv$pop.sp.year, season$pop.sp.year)]
#If an individual stayed longer than the breeding season length, then change its length to the breeding season lenght
indiv[indiv$bs.length > indiv$season.length,]
indiv$corrected.bs.length <- ifelse(indiv$bs.length > indiv$season.length, indiv$season.length, indiv$bs.length)
indiv<-ddply(indiv, c("pop.year"), transform, corrected.bs.length.std=scale(corrected.bs.length))
#Monogamous and polygamous pops
indiv$ms <- ifelse(indiv$pop.sp %in% c("Ceuta-SP", "Tuzla-KP", "Madagascar-KiP"), "Pol", "Mon")
males.mol<-indiv[grep(indiv$pop.sp.sex, pattern="M$"),]
females.mol<-indiv[grep(indiv$pop.sp.sex, pattern="F$"),]
both<-rbind(males.mol, females.mol)
both$sex <- as.factor(both$sex)
#_-------------------------------------------------------------------------------------
# Breeding Schedule length
#1. Data structure:--------
#a) Histograms:---------------
hist(indiv$corrected.bs.length.std)
table(indiv$bs.length.std)
require(MASS)
library(car)
qqnorm(indiv$corrected.bs.length.std)
qqline(indiv$corrected.bs.length.std,lty=2)
qqp(both$corrected.bs.length.std.plus3, "lnorm") #needs newer version of R
both$corrected.bs.length.std.plus3<-both$corrected.bs.length.std + 3.3518
qqp(both$corrected.bs.length.std.plus3, "lnorm") #needs newer version of R
summary(both$corrected.bs.length.std)
summary(both$bs.start.std)
both$corrected.bs.length.std.plus3<-both$corrected.bs.length.std + 3.3518
both$bs.start.std.plus7 <- both$bs.start.std + 7.071000
summary(both$bs.start.std.plus7)
qqp(both$corrected.bs.length.std, "norm")
qqp(both$corrected.bs.length.std.plus3)
gamma <- fitdistr(both$corrected.bs.length.std.plus3, "gamma")
qqp(both$corrected.bs.length.std.plus3, "gamma", shape = gamma$estimate[[1]], rate = gamma$estimate[[2]])
poisson <- fitdistr(both$corrected.bs.length.std.plus3, "Poisson")
qqp(both$corrected.bs.length.std.plus3, "pois", poisson$estimate)
qqp(both$corrected.bs.length.std.plus3, "gamma", shape = gamma$estimate[[1]], rate = gamma$estimate[[2]])
qqp(both$corrected.bs.length.std, "norm")
indiv$year<- as.factor(indiv$year)
indiv$pop.sp<-as.factor(indiv$pop.sp)
indiv$ms<-as.factor(indiv$ms)
mm1<-lme(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex+  ms + ms:sex + year, random = ~1|population/species/id, method="ML", na.action=na.omit,data=both) #residual plot does not look good, needs change of error structure
library(lme4)
library(nlme)
both$id <- ifelse(is.na(both$ring), both$code, both$ring)
mm1<-lme(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex+  ms + ms:sex + year, random = ~1|population/species/id, method="ML", na.action=na.omit,data=both) #residual plot does not look good, needs change of error structure
plot(mm1)
m<-mm1
plot(fitted(m), residuals(m), xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0, lty = 2)
lines(smooth.spline(fitted(m), residuals(m)), col="red") #according to this line the model: mmlog<-glmer(corrected.bs.length.std.plus3 ~ sex+  ms + ms:sex + year+ (1|population/species/year), family=Gamma,data=both, na.action=na.omit) fits the data alright
mm1<-lme(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex+  ms + ms:sex + year, random = ~1|population/species/id + ~1|year, method="ML", na.action=na.omit,data=both) #residual plot does not look good, needs change of error structure
mm1<-lme(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex+  ms + ms:sex + year, random = (~1|population/species/id) + (~1|year), method="ML", na.action=na.omit,data=both) #residual plot does not look good, needs change of error structure
mm1<-lme(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex+  ms + ms:sex  +(1|year), random = ~1|population/species/id, method="ML", na.action=na.omit,data=both) #residual plot does not look good, needs change of error structure
mm1<-lme(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex+  ms + ms:sex  +(~1|year), random = ~1|population/species/id, method="ML", na.action=na.omit,data=both) #residual plot does not look good, needs change of error structure
mm1<-lmer(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex+  ms + ms:sex + (1|population/species/id) + (1|year), method="ML", na.action=na.omit,data=both) #residual plot does not look good, needs change of error structure
mm1<-lmer(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex+  ms + ms:sex + (1|population/species/id) + (1|year), method="REML", na.action=na.omit,data=both) #residual plot does not look good, needs change of error structure
mm1<-lmer(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex+  ms + ms:sex + (1|population/species/id) + (1|year), na.action=na.omit,data=both) #residual plot does not look good, needs change of error structure
summary(mm1)
m<-mm1
plot(fitted(m), residuals(m), xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0, lty = 2)
lines(smooth.spline(fitted(m), residuals(m)), col="red") #according to this line the model: mmlog<-glmer(corrected.bs.length.std.plus3 ~ sex+  ms + ms:sex + year+ (1|population/species/year), family=Gamma,data=both, na.action=na.omit) fits the data alright
mm1<-lmer(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex+  ms + ms:sex + (1|population/species/id) + (1|year),REML=F ,na.action=na.omit,data=both) #residual plot does not look good, needs change of error structure
summary(mm1)
mm1<-lmer(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex+  ms + ms:sex + (1|population) +(1|id) + (1|year),REML=F ,na.action=na.omit,data=both) #residual plot looks better with this new random error structure, needs change of error structure
mm10<-lmer(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex+  ms + ms:sex + (1|population) +(1|id) + (1|year),REML=F ,na.action=na.omit,data=both) #residual plot looks better with this new random error structure, needs change of error structure
summary(mm10)
mm1<-lmer(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex+  ms + ms:sex + (1|population/species/id) + (1|year), REML=F, na.action=na.omit, data=both) #residual plot looks better with this new random error structure, needs change of error structure
m<-mm1
plot(fitted(m), residuals(m), xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0, lty = 2)
lines(smooth.spline(fitted(m), residuals(m)), col="red") #according to this line the model: mmlog<-glmer(corrected.bs.length.std.plus3 ~ sex+  ms + ms:sex + year+ (1|population/species/year), family=Gamma,data=both, na.action=na.omit) fits the data alright
mm2<-lmer(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex+  ms + ms:sex + (1|species/population) +(1|id) + (1|year), REML=F, na.action=na.omit, data=both) #residual plot looks better with this new random error structure, needs change of error structure
mm3<-lmer(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex+  ms + ms:sex + (1|species/population/id) + (1|year), REML=F, na.action=na.omit, data=both) #residual plot looks better with this new random error structure, needs change of error structure
mm1<-lmer(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex+  ms + ms:sex + (1|population/species/id) + (1|year), REML=F, na.action=na.omit, data=both) #residual plot looks better with this new random error structure, needs change of error structure
par(mfrow=c(2,2))
m<-mm1
plot(fitted(m), residuals(m), xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0, lty = 2)
lines(smooth.spline(fitted(m), residuals(m)), col="red") #according to this line the model: mmlog<-glmer(corrected.bs.length.std.plus3 ~ sex+  ms + ms:sex + year+ (1|population/species/year), family=Gamma,data=both, na.action=na.omit) fits the data alright
m<-mm2
plot(fitted(m), residuals(m), xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0, lty = 2)
lines(smooth.spline(fitted(m), residuals(m)), col="red") #according to this line the model: mmlog<-glmer(corrected.bs.length.std.plus3 ~ sex+  ms + ms:sex + year+ (1|population/species/year), family=Gamma,data=both, na.action=na.omit) fits the data alright
m<-mm3
plot(fitted(m), residuals(m), xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0, lty = 2)
lines(smooth.spline(fitted(m), residuals(m)), col="red") #according to this line the model: mmlog<-glmer(corrected.bs.length.std.plus3 ~ sex+  ms + ms:sex + year+ (1|population/species/year), family=Gamma,data=both, na.action=na.omit) fits the data alright
qqp(residuals(m))
summary(mm1)
summary(mm2)
summary(mm3)
coeff(mm1)
coef(mm1)
mm2<-lmer(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex+  ms + ms:sex + (1|species/population) +(1|id) + (1|year), REML=F, na.action=na.omit, data=both) #residual plot looks better with this new random error structure, needs change of error structure
coef(mm2)
head(coef(mm2))
mm3<-lmer(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex+  ms + ms:sex + (1|species/population/id) + (1|year), REML=F, na.action=na.omit, data=both) #residual plot looks better with this new random error structure, needs change of error structure
coef(mm3)
mm3<-lmer(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex+  ms + ms:sex + (1|id/population/species) + (1|year), REML=F, na.action=na.omit, data=both) #residual plot looks better with this new random error structure, needs change of error structure
coef(mm3)
summary(mm3)
mm3<-lmer(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex+  ms + ms:sex + year + (1|id/population/species) , REML=F, na.action=na.omit, data=both) #residual plot looks better with this new random error structure, needs change of error structure
summary(mm3)
mm3<-lmer(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex+  ms + ms:sex + year + (1|species/population/id) , REML=F, na.action=na.omit, data=both) #residual plot looks better with this new random error structure, needs change of error structure
summary(mm3)
coef(mm3)
c<-coef(mm3)
write.csv(c, "coef.model.csv")
write.table(c, "coef.model.csv")
c<-as.data.frame(coef(mm3))
mm3<-lmer(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex+  ms + ms:sex + year + (1|species) + (1|population) + (1|id) , REML=F, na.action=na.omit, data=both) #residual plot looks better with this new random error structure, needs change of error structure
c<-coef(mm3)
c
mm3$coef
c$id
head(c$id)
m<-mm3
plot(fitted(m), residuals(m), xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0, lty = 2)
lines(smooth.spline(fitted(m), residuals(m)), col="red") #according to this line the model: mmlog<-glmer(corrected.bs.length.std.plus3 ~ sex+  ms + ms:sex + year+ (1|population/species/year), family=Gamma,data=both, na.action=na.omit) fits the data alright
qqp(residuals(m))
mm3<-lmer(corrected.bs.length.std ~ bs.start.std + total.nests.peryear + sex+  ms + ms:sex + year + (1|species/population) + (1|id) , REML=F, na.action=na.omit, data=both) #residual plot looks better with this new random error structure, needs change of error structure
summary(mm3)
m<-mm3
plot(fitted(m), residuals(m), xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0, lty = 2)
lines(smooth.spline(fitted(m), residuals(m)), col="red") #according to this line the model: mmlog<-glmer(corrected.bs.length.std.plus3 ~ sex+  ms + ms:sex + year+ (1|population/species/year), family=Gamma,data=both, na.action=na.omit) fits the data alright
