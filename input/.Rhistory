bp <- read.table("F:/Cheko recruitment age and longevity paper/Plot Recruiting age - longevity/RecAge and longevity.csv",sep=",",header=TRUE,as.is=TRUE)
bp <- read.table("F:/Cheko recruitment age and longevity paper/Plot Recruiting age - longevity/input/RecAge and longevity.csv",sep=",",header=TRUE,as.is=TRUE)
names(bp)
s<-bp[,4:29]
s$extracol <- 1
s$extracol2 <-1
names(s)
s2 <- s[3:5, c(27,1:22,28)]
names(s2)
count.zeroes <- apply (s2,1, function(x) diff(which(x==1))-1)
s2
count.zeroes
rnorm(100,10, sd=1)
x<-rnorm(100,10, sd=1)
hist(x)
sd(x)
rnorm(1,10,sd=1)
rnorm(1,10,sd=1)
rnorm(1,10,sd=1)
rnorm(1,10,sd=1)
rnorm(1,10,sd=1)
rnorm(1,10,sd=1)
asr<- c(0.02, 0.05, 0.09)
osr<- c(0.13, 0.21, 0.31)
wilcox.test(asr,osr)
help(wilcox.test)
t.test(asr, osr, paired=TRUE)
1.5756-1.5373
239.47-266.
239.47-267.37
2790/239.47
3.83/1.5756
m<-c(46)
f<-c(27)
mf<-rbind(m,f)
chisq.test(mf, p=c(1/2))
chisq.test(mf, p=c(1/2,1/2))
help(t.test)
m/f
m/f+m
m/(f+m)
t.test(m/(f+m), mu=0.5, paired=F)
binomial test
help(binom.test)
binom.test(46,46+27, p=0.5)
binom.test(38,38+32, p=0.5)
binom.test(25,25+21, p=0.5)
chisq.test(mf, p=c(1/2,1/2))
binom.test(46,46+27, p=0.5)
m<-c(46,38,25)
f<-c(27,32,21)
mf<-rbind(m,f)
chisq.test(mf, p=c(1/2,1/2,1/2))
m<-c(46)
f<-c(27)
mf<-rbind(m,f)
chisq.test(mf, p=c(1/2,1/2))
pf(23.45,1,19)
pf(23.45,1,19, lower.tail=F)
pf(23.45,1,17, lower.tail=F)
pf(0.67,1,18, lower.tail=F)
??pf
help(pf)
vector)=
vector)=
x<-c(1:20)
x
y<-10
y
z<-1:20
z
as.numeric(x)
as.logical(x)
as.complex(x)
m<-matrix(1:6, nrow=2, ncol=3)
m
m
clear.function(x)
remove(x)
remove(y)
remove(z)
x<-1:3
y<-10:12
cbind(x,y)
remove(x)
remove(y)
x<-factor(c("yes,"yes","no","yes","no""))
x
x<-factor(c("yes , "yes" , "no" , "yes" , "no"))
x<-factor(c("yes" , "yes" , "no" , "yes" , "no"))
x
table(x)
unclass(x)
levels=c("yes","no")
x
levels=c("yes","no"))
x<-factor(c("yes,"yes","no","yes","no"), levels=c("yes","no"))
x<-factor(c("yes","yes","no","yes","no"), levels=c("yes","no"))
x
z<-c(1,2,NA,3)
Z
z
is.na(x)
is.na(z)
is.nan(z)
n<-data.frame(foo=1:4,bar=c(T,T,F,F))
N
n
nrow(x)
nrow(n)
ncolumn(n)
ncol(n)
x
z
n
remove(x)
names(x)
x<-1:3
names(x)
names(x)<-c("hello","bye","yes")
x
names(x)
u<-list(a=1,b=2,c=3)
u
remove(m)
m<-matrix(1:4, nrow=2, ncol=2)
dimnames(m)<-list(c("a","b), c("c","d"))
dimnames(m)<-list(c("a","b"), c("c","d"))
m
z[1:4]
z
x
x[1:4]
o<-x>"a"
o
remove(n)
remove(x)
remove(o)
remove(z)
remove(m)
remove(n)
remove(n)remove(u)
remove(n), remove(u)
remove(u)
x<-matrix(1:6, 2, 3)
x[1,2]
x[1,3]
x[1,1]
x[1,2]
x[1, ]
x[,2]
remove(x)
x[[name]]
x<-list(food=10,drink=5,wish="nein")
name<-"food"
x[[name]]
x$name
remove(x)
remove(name)
remove(levels)
x<-list(a=list(10,12,14),=c(2.45, 5.64))
x<-list(a= list(10,12,14),b =c(2.45, 5.64))
x[[c(1,3)]]
x[[c(2,2)]]
x[[c(2,3)]]
x<-list(quadratic = 1:20)
x$q
x[["q"]]
x[["q", exact = F]]
remove(x)
x<-c(1,2,3,NA,5,6,NA)
bad<-is.na(x)
x[!bad]
x(!bad)
y<-c("a","b",NA,"d",NA,8,7)
good<-complete.case(c,y)
good<-complete.cases(c,y)
good<-complete.cases(x,y)
good
x[good]
y[good]
load("F:/Plovers/3rd Chapter/input/Madagascar/.RData")
bfa[is.na(bfa$parent),]
table(sex$sex, na.omit=F)
help(table)
table(sex$sex, useNA=]"always")
table(sex$sex, useNA="always")
sex<-sex[!is.na(sex$sex),]
bfa$mol_sex.p1<-NA
bfa$mol_sex.p2<-NA
#a) add mol sex to individuals with rings FH...
letters<-"^[FH0-9]*$"
for(i in 1:length(bfa$year)){ #modification for MAD, search for rings of individuals with code but no ring
print(i)
if(!is.na(bfa$parent1[i]) & grepl(pattern=letters, bfa$parent1[i], perl=T)){
bfa$mol_sex.p1[i] <- sex$sex[match(bfa$parent1[i], sex$ring)]
}
if(!is.na(bfa$parent2[i]) & grepl(pattern=letters, bfa$parent2[i], perl=T)){
bfa$mol_sex.p2[i] <- sex$sex[match(bfa$parent2[i], sex$ring)]
}
}
#b) add mol sex to individuals with no rings
bfa$sp.new.code.p1 <- paste(bfa$species, bfa$new.code.p1, sep="-")
bfa$sp.new.code.p2 <- paste(bfa$species, bfa$new.code.p2, sep="-")
sex$sp.code <- paste(sex$species, sex$ring, sep="-")
for(i in 1:length(bfa$year)){ #modification for MAD, search for rings of individuals with code but no ring
if(is.na(bfa$mol_sex.p1[i]) & !is.na(bfa$new.code.p1[i])){
bfa$mol_sex.p1[i] <- sex$sex[match(bfa$sp.new.code.p1[i], sex$sp.code)]
print(i)
}
if(is.na(bfa$mol_sex.p2[i]) & !is.na(bfa$new.code.p2[i])){
bfa$mol_sex.p2[i] <- sex$sex[match(bfa$sp.new.code.p2[i], sex$sp.code)]
}
}
#---debug 2.--------------------------------------------------------
head(bfa)
str(bfa[is.na(bfa$mol_sex.p1),]) #372 NAs in mol_sex.p1, after sp.code (b) 328 NAs
str(bfa[is.na(bfa$mol_sex.p2),]) #822 NAs in mol_sex.p2, after sp.code (b) 815 NAs
str(bfa[is.na(bfa$mol_sex.p2) & is.na(bfa$mol_sex.p1),]) #334 NAs in both molp1 and molp2, after sp.code (b) 290 NAs
#--------------------------------------------------
#3. Create parent column
#Both parents are present
for(i in 1:length(bfa$year)){
if(!is.na(bfa$parent1[i]) & !is.na(bfa$parent2[i])|
!is.na(bfa$mol_sex.p1[i]) & !is.na(bfa$mol_sex.p2[i])){
bfa$parent[i] <- 4
}
}
bfa[bfa$parent %in% "4",]
bfa[!bfa$parent %in% "4",]
table(bfa$mol_sex.p1)
table(bfa$mol_sex.p2)
#One parent present
for(i in 1:length(bfa$year)){
print(i)
if(!is.na(bfa$mol_sex.p1[i]) & is.na(bfa$mol_sex.p2[i])){
if(bfa$mol_sex.p1[i] %in% "M"){
bfa$parent[i] <- 3
}else{
if(bfa$mol_sex.p1[i] %in% "F"){
bfa$parent[i] <- 2
}
}
}else{
if(!is.na(bfa$mol_sex.p2[i]) & is.na(bfa$mol_sex.p1[i])){
if(bfa$mol_sex.p2[i] %in% "M"){
bfa$parent[i] <- 3
}else{
if(bfa$mol_sex.p2[i] %in% "F"){
bfa$parent[i] <- 2
}
}
}
}
}
str(bfa[is.na(bfa$mol_sex.p1),]) #372 NAs in mol_sex.p1, after sp.code (b) 328 NAs
str(bfa[is.na(bfa$mol_sex.p2),]) #822 NAs in mol_sex.p2, after sp.code (b) 815 NAs
str(bfa[is.na(bfa$mol_sex.p2) & is.na(bfa$mol_sex.p1),]) #334 NAs in both molp1 and molp2, after sp.code (b) 290 NAs
for(i in 1:length(bfa$year)){
if(!is.na(bfa$parent1[i]) & !is.na(bfa$parent2[i])|
!is.na(bfa$mol_sex.p1[i]) & !is.na(bfa$mol_sex.p2[i])){
bfa$parent[i] <- 4
}
}
bfa[bfa$parent %in% "4",]
bfa[!bfa$parent %in% "4",]
table(bfa$mol_sex.p1)
table(bfa$mol_sex.p2)
#One parent present
for(i in 1:length(bfa$year)){
print(i)
if(!is.na(bfa$mol_sex.p1[i]) & is.na(bfa$mol_sex.p2[i])){
if(bfa$mol_sex.p1[i] %in% "M"){
bfa$parent[i] <- 3
}else{
if(bfa$mol_sex.p1[i] %in% "F"){
bfa$parent[i] <- 2
}
}
}else{
if(!is.na(bfa$mol_sex.p2[i]) & is.na(bfa$mol_sex.p1[i])){
if(bfa$mol_sex.p2[i] %in% "M"){
bfa$parent[i] <- 3
}else{
if(bfa$mol_sex.p2[i] %in% "F"){
bfa$parent[i] <- 2
}
}
}
}
}
#---------------------debug
bfa[is.na(bfa$parent1) & !is.na(bfa$parent2),]
head(bfa)
table(bfa$year)
bfa[is.na(bfa$parent),]
table(bfa$parents, useNA="always")
table(bfa$parent, useNA="always")
bfa[is.na(bfa$parent),c("parent1","parent2","mol_sex.p1", "mol_sex.p2", "parent")]
bfa[is.na(bfa$parent),c("parent1","parent2","new.code1","mol_sex.p1", "mol_sex.p2", "parent")]
head(bfa)
bfa[is.na(bfa$parent),c("parent1","parent2","new.code.p1","new.code.p2","mol_sex.p1", "mol_sex.p2", "parent")]
#--------------------------
bfa[is.na(bfa$parent),c("parent1","parent2","new.code.p1","new.code.p2","mol_sex.p1", "mol_sex.p2", "parent")]
head(bfa)
bfa$no_chicks <- apply(bfa[,c("chick1","chick2","chick3")], 1 function(x)
length (which(!is.na(x))))
bfa$no_chicks <- apply(bfa[,c("chick1","chick2","chick3")], 1 function(x)
length
bfa$no_chicks <- apply(bfa[,c("chick1","chick2","chick3")], 1 function(x) length(which(!is.na(x))))
#----------------------WRITE STD FILE
bfa$no_chicks <- apply(bfa[,c("chick1","chick2","chick3")], 1 function(x) length(which(!is.na(x))))
bfa$no_chicks <- apply(bfa[,c("chick1","chick2","chick3")], 1, function(x) length(which(!is.na(x))))
bfa$no_chicks
head(bfa)
setwd("F:/Plovers/3rd Chapter/Exploratory_results/input")
csvfiles <- list.files(path = ".", pattern='*\\.csv$', all.files=TRUE)
csvfiles
import.list <- lapply(csvfiles, read.csv, header = TRUE, as.is=TRUE, na.strings=c("NA"," ",""))
working.list <- import.list[1]
names(working.list) <- c("both")
attach(working.list)
both0<-both
both<-both0
names(both)
head(both)
both[both$population %in% "Ceuta",c("first.res.bs", "first.res")]
both[both$population %in% "Ceuta" & both$first.res.bs !=both$first.res,c("first.res.bs", "first.res")]
both[both$population %in% "Ceuta" & !both$first.res.bs %in%both$first.res,c("first.res.bs", "first.res")]
str(both)
both[both$population %in% "Ceuta",c("first.res.bs", "first.res","first.d.seen")]
ind<-which(both$population %in% "Ceuta" & both$first.res.bs != both$first.res)
both[ind,c("first.res.bs", "first.res","first.d.seen")]
both$year.ring <- paste(both$year, both$ring, sep="-")
both$year.ring <- paste(both$year, both$ring, sep="-")
head(both[order(both$year.ring),])
both$last.d.seen2 <- as.Date(both$last.d.seen2, "%Y-%m-%d")
both$first.d.seen2 <- as.Date(both$first.d.seen2, "%Y-%m-%d")
both$layingdate <- as.Date(both$layingdate, "%d/%m/%Y")
both$found_date.r <- as.Date(both$found_date.r, "%d/%m/%Y")
both$last.d.seen <- as.Date(both$last.d.seen, "%Y-%m-%d")
both$first.d.seen <- as.Date(both$first.d.seen, "%Y-%m-%d")
both$layingdate <- as.Date(both$layingdate, "%d/%m/%Y")
both$found_date.r <- as.Date(both$found_date.r, "%d/%m/%Y")
both$end_date.r <- as.Date(both$end_date.r, "%d/%m/%Y")
both$layingdate
both$found_date.r <- as.Date(both$found_date.r, "%d/%m/%Y")
both$end_date.r <- as.Date(both$end_date.r, "%d/%m/%Y")
both$ld.minus10<-both$layingdate-10
for(i in 1:length(both$year)){  #for loop brood fates adults
print(i)
#options(warn=1)
options(warn=0)
ind <- which(both$year.ring[i] == both$year.ring)
group.nests<-both[ind,]
both$total.nests.peryear[i] <- length(group.nests$year)
both$earliest.seen[i] <- min(group.nests$first.d.seen2, na.rm=T)
both$latest.seen[i] <- max(group.nests$last.d.seen2, na.rm=T)
both$min.ldminus10[i] <- min(group.nests$ld.minus10, na.rm=T)
both$earliest.founddate[i] <- min(group.nests$found_date.r, na.rm=T)
both$latest.enddate[i] <- max(group.nests$end_date.r, na.rm=T)
both$min.layingdate[i] <- min(group.nests$layingdate, na.rm=T)
}
both2<-both
names(both2)
cols <- c(101,104, 106:111)
both2[,cols]<-lapply(both2[,cols], as.Date, origin="1970-01-01") #change columns to dates
str(both2, list.len = 999)
str(both, list.len = 999)
tail(both2[order(both2$year.ring),])
both$year.ring <- ifelse(is.na(both$ring) & !is.na(both$code), paste(both$year, both$code, sep="-"), paste(both$year, both$ring, sep="-"))
for(i in 1:length(both$year)){  #for loop brood fates adults
print(i)
#options(warn=1)
options(warn=0)
ind <- which(both$year.ring[i] == both$year.ring)
group.nests<-both[ind,]
both$total.nests.peryear[i] <- length(group.nests$year)
both$earliest.seen[i] <- min(group.nests$first.d.seen2, na.rm=T)
both$latest.seen[i] <- max(group.nests$last.d.seen2, na.rm=T)
both$min.ldminus10[i] <- min(group.nests$ld.minus10, na.rm=T)
both$earliest.founddate[i] <- min(group.nests$found_date.r, na.rm=T)
both$latest.enddate[i] <- max(group.nests$end_date.r, na.rm=T)
both$min.layingdate[i] <- min(group.nests$layingdate, na.rm=T)
}
both2<-both
cols <- c(101,104, 106:111)
both2[,cols]<-lapply(both2[,cols], as.Date, origin="1970-01-01") #change columns to dates
tail(both2[order(both2$year.ring),])
tail(both[order(both$year.ring) & both$total.nests.peryear>1,], n=-528)
